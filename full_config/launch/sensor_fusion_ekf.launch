<launch>
  <!-- AMCL and Map server -->
  <arg name="use_map_topic" default="false"/>
  <arg name="scan_topic" default="scan"/>
  <!-- Map File -->
  <!-- <arg name="map_file" default="/opt/ros/map/labsea.yaml"/> -->
  <!-- <arg name="map_file" default="/home/labsea5/catkin_ws/src/sensor_fusion/full_config/map/labsea.yaml"/> -->

  <!-- Map File Container-->
  <!-- <arg name="map_file" default="/opt/ros/map/labsea.yaml"/> -->
  <arg name="map_file" default="/opt/ros/map/labsea.yaml"/>
	
  <!-- Map Server -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />

  <!--AMCL --> 
  <node pkg="amcl" type="amcl" name="amcl">
    <rosparam command="load" file="../config/amcl_config/amcl_template.yaml"/>
  </node>

  <!-- Reconstruction -->
  <node pkg="reconstruction_3d" type="publishToROS.py" name="is">
    <rosparam command="load" file="../config/rec_config/reconstruction_template.yaml" />
  </node>

  <!-- Robot localization -->
  <!-- AMCL and Vo Kalman Filter-->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_map" clear_params="true"> 
    <rosparam command="load" file="../config/robot_localization_config/ekf_template.yaml" />
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
  </node>

  <!-- Call service: amcl global localization-->>
  <node pkg="rosservice" type="rosservice" name="global_loc" args="call --wait /global_localization" />

  <!-- Transformation for costmap to works-->>  
  <node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" args="0 0 0 0 0 0 base_link laser 100"/>  

</launch>